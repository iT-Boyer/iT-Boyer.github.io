<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>线程 on 习七</title><link>https://it-boyer.github.io/tags/%E7%BA%BF%E7%A8%8B/</link><description>Recent content in 线程 on 习七</description><generator>Hugo</generator><language>zh-cn</language><managingEditor>itboyer@qq.com (iTBoyer)</managingEditor><webMaster>itboyer@qq.com (iTBoyer)</webMaster><lastBuildDate>Sun, 24 Sep 2017 19:06:03 +0000</lastBuildDate><atom:link href="https://it-boyer.github.io/tags/%E7%BA%BF%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>线程安全类的设计</title><link>https://it-boyer.github.io/post/old/iOS/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%B1%BB%E7%9A%84%E8%AE%BE%E8%AE%A1/</link><pubDate>Sun, 24 Sep 2017 19:06:03 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/iOS/%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%B1%BB%E7%9A%84%E8%AE%BE%E8%AE%A1/</guid><description>&lt;p&gt;这篇文章将专注于实用技巧，设计模式，以及对于写出线程安全类和使用 GCD 来说所特别需要注意的一些&lt;a href="http://zh.wikipedia.org/wiki/%E5%8F%8D%E9%9D%A2%E6%A8%A1%E5%BC%8F"&gt;反面模式&lt;/a&gt;。&lt;/p&gt;
&lt;h2&gt;线程安全&lt;/h2&gt;
&lt;h3&gt;Apple 的框架&lt;/h3&gt;
&lt;p&gt;首先让我们来看看 Apple 的框架。一般来说除非特别声明，大多数的类默认都不是线程安全的。对于其中的一些类来说，这是很合理的，但是对于另外一些来说就很有趣了。&lt;/p&gt;</description></item><item><title>GCD底层并发API</title><link>https://it-boyer.github.io/post/old/iOS/GCD%E5%BA%95%E5%B1%82%E5%B9%B6%E5%8F%91API/</link><pubDate>Sun, 24 Sep 2017 18:21:38 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/iOS/GCD%E5%BA%95%E5%B1%82%E5%B9%B6%E5%8F%91API/</guid><description>&lt;p&gt;这篇文章里，我们将会讨论一些 iOS 和 OS X 都可以使用的底层 API。除了 &lt;code&gt;dispatch_once&lt;/code&gt; ，我们一般不鼓励使用其中的任何一种技术。&lt;/p&gt;
&lt;p&gt;但是我们想要揭示出表面之下深层次的一些可利用的方面。这些底层的 API 提供了大量的灵活性，随之而来的是大量的复杂度和更多的责任。在我们的文章&lt;a href="http://objccn.io/issue-2-2/"&gt;常见的后台实践&lt;/a&gt;中提到的高层的 API 和模式能够让你专注于手头的任务并且免于大量的问题。通常来说，高层的 API 会提供更好的性能，除非你能承受起使用底层 API 带来的纠结于调试代码的时间和努力。&lt;/p&gt;</description></item><item><title>iOS多线程API介绍</title><link>https://it-boyer.github.io/post/old/iOS/iOS%E5%A4%9A%E7%BA%BF%E7%A8%8BAPI%E4%BB%8B%E7%BB%8D/</link><pubDate>Sun, 24 Sep 2017 09:18:49 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/iOS/iOS%E5%A4%9A%E7%BA%BF%E7%A8%8BAPI%E4%BB%8B%E7%BB%8D/</guid><description>&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Concurrency_%28computer_science%29"&gt;并发&lt;/a&gt;所描述的概念就是同时运行多个任务。这些任务可能是以在单核 CPU 上&lt;a href="http://en.wikipedia.org/wiki/Preemption_%28computing%29"&gt;分时（时间共享）&lt;/a&gt;的形式同时运行，也可能是在多核 CPU 上以真正的并行方式来运行。&lt;/p&gt;
&lt;p&gt;OS X 和 iOS 提供了几种不同的 API 来支持并发编程。每一个 API 都具有不同的功能和使用限制，这使它们适合不同的任务。同时，这些 API 处在不同的抽象层级上。我们有可能用其进行非常深入底层的操作，但是这也意味着背负起将任务进行良好处理的巨大责任。&lt;/p&gt;</description></item></channel></rss>