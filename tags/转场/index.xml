<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>转场 on 习七</title><link>https://it-boyer.github.io/tags/%E8%BD%AC%E5%9C%BA/</link><description>Recent content in 转场 on 习七</description><generator>Hugo</generator><language>zh-cn</language><managingEditor>itboyer@qq.com (iTBoyer)</managingEditor><webMaster>itboyer@qq.com (iTBoyer)</webMaster><lastBuildDate>Fri, 17 Feb 2017 12:26:11 +0000</lastBuildDate><atom:link href="https://it-boyer.github.io/tags/%E8%BD%AC%E5%9C%BA/index.xml" rel="self" type="application/rss+xml"/><item><title>自定义展示型控制器</title><link>https://it-boyer.github.io/post/old/iOS/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%95%E7%A4%BA%E5%9E%8B%E6%8E%A7%E5%88%B6%E5%99%A8/</link><pubDate>Fri, 17 Feb 2017 12:26:11 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/iOS/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%95%E7%A4%BA%E5%9E%8B%E6%8E%A7%E5%88%B6%E5%99%A8/</guid><description>&lt;p&gt;{% github it-boyer PresentationsDemo 2cce4c908 width = 30% %}&lt;/p&gt;
&lt;h2&gt;触发转场的方式&lt;/h2&gt;
&lt;h3&gt;官方支持的自定义转场&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;UINavigationController&lt;/code&gt; 中 &lt;code&gt;push&lt;/code&gt; 和 &lt;code&gt;pop&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;UITabBarController&lt;/code&gt; 中切换 &lt;code&gt;Tab&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Modal 转场：&lt;code&gt;presentation&lt;/code&gt; 和 &lt;code&gt;dismissal&lt;/code&gt;，俗称视图控制器的模态显示和消失，仅限于&lt;code&gt;modalPresentationStyle&lt;/code&gt;属性为 &lt;code&gt;UIModalPresentationFullScreen&lt;/code&gt; 或 &lt;code&gt;UIModalPresentationCustom&lt;/code&gt; 这两种模式;
&lt;code&gt;UICollectionViewController&lt;/code&gt; 的布局转场：仅限于 &lt;code&gt;UICollectionViewController&lt;/code&gt; 与 &lt;code&gt;UINavigationController&lt;/code&gt; 结合的转场方式，与上面三种都有点不同，不过实现很简单，可跳转至该链接查看。
官方的支持包含了 iOS 中的大部分转场方式，还有一种自定义容器中的转场并没有得到系统的直接支持，不过借助协议这种灵活的方式，我们依然能够实现对自定义容器控制器转场的定制，在压轴环节我们将实现这一点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;相关触发转场的动作&lt;/h3&gt;
&lt;h4&gt;UINavigationController&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;UINavigationController&lt;/code&gt; 中所有修改其&lt;code&gt;viewControllers&lt;/code&gt;栈中 &lt;code&gt;VC&lt;/code&gt; 的方法都可以自定义转场动画：
{% codeblock swift lang:swift %}
//我们使用的最广泛的 push 和 pop 方法
func pushViewController(_ viewController: UIViewController, animated animated: Bool)
func popViewControllerAnimated(_ animated: Bool) -&amp;gt; UIViewController?
//不怎么常用的 pop 方法
func popToRootViewControllerAnimated(_ animated: Bool) -&amp;gt; [UIViewController]?
func popToRootViewControllerAnimated(_ animated: Bool) -&amp;gt; [UIViewController]?
//这个方法有有点特别，是对 VC 栈的整体更新，开启动画后的执行比较复杂，具体参考文档说明。不建议在这种情况下开启转场动画。
func setViewControllers(_ viewControllers: [UIViewController], animated animated: Bool)
{% endcodeblock %}&lt;/p&gt;</description></item><item><title>整理iOS中几种常用的展示型视图控制器</title><link>https://it-boyer.github.io/post/old/iOS/iOS%E4%B8%AD%E5%87%A0%E7%A7%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B1%95%E7%A4%BA%E6%8E%A7%E5%88%B6%E5%99%A8%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 16 Feb 2017 17:53:18 +0000</pubDate><author>itboyer@qq.com (iTBoyer)</author><guid>https://it-boyer.github.io/post/old/iOS/iOS%E4%B8%AD%E5%87%A0%E7%A7%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B1%95%E7%A4%BA%E6%8E%A7%E5%88%B6%E5%99%A8%E4%BD%BF%E7%94%A8/</guid><description>&lt;p&gt;&lt;a href="https://www.dropbox.com/s/4gj6levvlav2xzc/PresentationsDemoStart.zip?dl=0"&gt;开始项目&lt;/a&gt;
&lt;a href="https://github.com/appcoda/Presentation-Controllers-Demo"&gt;完整项目&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;UIAlertController&lt;/h2&gt;
&lt;p&gt;在iOS8中，提供&lt;code&gt;UIAlertController&lt;/code&gt;控制器代替&lt;code&gt;UIAlertView&lt;/code&gt;和&lt;code&gt;UIActionSheet&lt;/code&gt;两个控件。给用户展示提示信息的新的一种方式。&lt;/p&gt;</description></item></channel></rss>